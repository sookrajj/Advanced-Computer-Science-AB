package Q1;
import DataStructures.intLinkedList;

public class BigLinkedList {
    public static void main(String[] args) {
        var list = new intLinkedList();
        for (int lcv = 0; lcv < 200; lcv++) {
            list.addFront((int) (Math.random()*100 + 1));
        }
        var iter = list.iterator();
        while (iter.hasNext()) {
            System.out.print(iter.next() + " ");
        }
        System.out.println();
        list.addLast(58);
        System.out.println(list.getCount());
        System.out.println(list.add(58, 58));
        System.out.println("Is list empty: " + list.isEmpty());
        list.printList();
        System.out.println(list.getFirst());
        System.out.println(list.getLast());
        System.out.println(list.getSpot(58));
        list.removeFirst();
        list.removeLast();
        System.out.println(list.getLast());
        System.out.println("The amount of numbers less than 10 is " + list.countLess10());
        list.printList();
        list.removeSpot(58);
        list.clear();
        System.out.println(list.checkForNum(58));
        for (int lcv = 0; lcv < 200; lcv++) {
            list.addFront((int) (Math.random()*100 + 1));
        }
        list.printList();
        list = list.getReverse();
        list.printList();
        System.out.print("The average is: " + Math.round(list.avg() * 100)/100);
        System.out.println();
        System.out.println(list.min());
        System.out.println(list.max());
        System.out.println(list.findSpotMaxFirst());
        System.out.println(list.findSpotMaxLast());
        list.sort();
        list.printList();
        var num = list.lose58();
        System.out.println("The amount of 58s lost: " + num);
        System.out.println("The amount of evens: " + list.getEvenCount());
        list.killOdds();
        list.printList();
    }
}
//2 71 14 1 66 40 34 51 23 31 86 45 28 8 58 4 9 75 97 76 48 31 93 96 71 80 43 61 86 72 26 7 63 24 2 14 36 42 59 31 54 77 45 68 96 82 79 42 98 76 23 38 20 97 41 50 28 33 66 69 1 6 23 50 49 59 58 9 57 15 22 36 100 3 84 67 36 5 8 23 14 36 74 37 37 98 64 98 5 30 77 97 23 49 68 6 43 15 43 24 83 61 87 26 5 9 91 72 52 43 15 3 20 56 9 5 11 39 55 33 35 19 94 95 15 6 20 31 73 14 32 13 24 24 35 13 65 75 93 77 41 54 30 78 71 89 63 42 72 87 71 78 23 49 58 30 71 46 81 4 60 4 93 50 32 31 20 22 27 8 86 56 35 31 53 52 75 94 35 34 67 25 9 57 70 29 86 16 73 58 12 1 96 26 85 66 1 68 52 77
//201
//true
//Is list empty: true
//2 71 14 1 66 40 34 51 23 31 86 45 28 8 58 4 9 75 97 76 48 31 93 96 71 80 43 61 86 72 26 7 63 24 2 14 36 42 59 31 54 77 45 68 96 82 79 42 98 76 23 38 20 97 41 50 28 58 33 66 69 1 6 23 50 49 59 58 9 57 15 22 36 100 3 84 67 36 5 8 23 14 36 74 37 37 98 64 98 5 30 77 97 23 49 68 6 43 15 43 24 83 61 87 26 5 9 91 72 52 43 15 3 20 56 9 5 11 39 55 33 35 19 94 95 15 6 20 31 73 14 32 13 24 24 35 13 65 75 93 77 41 54 30 78 71 89 63 42 72 87 71 78 23 49 58 30 71 46 81 4 60 4 93 50 32 31 20 22 27 8 86 56 35 31 53 52 75 94 35 34 67 25 9 57 70 29 86 16 73 58 12 1 96 26 85 66 1 68 52 77 58
//2
//58
//14
//77
//The amount of numbers less than 10 is 26
//71 14 1 66 40 34 51 23 31 86 45 28 8 58 4 9 75 97 76 48 31 93 96 71 80 43 61 86 72 26 7 63 24 2 14 36 42 59 31 54 77 45 68 96 82 79 42 98 76 23 38 20 97 41 50 28 58 33 66 69 1 6 23 50 49 59 58 9 57 15 22 36 100 3 84 67 36 5 8 23 14 36 74 37 37 98 64 98 5 30 77 97 23 49 68 6 43 15 43 24 83 61 87 26 5 9 91 72 52 43 15 3 20 56 9 5 11 39 55 33 35 19 94 95 15 6 20 31 73 14 32 13 24 24 35 13 65 75 93 77 41 54 30 78 71 89 63 42 72 87 71 78 23 49 58 30 71 46 81 4 60 4 93 50 32 31 20 22 27 8 86 56 35 31 53 52 75 94 35 34 67 25 9 57 70 29 86 16 73 58 12 1 96 26 85 66 1 68 52 77
//false
//45 85 17 50 13 82 74 67 99 8 11 49 67 21 43 26 79 2 75 84 4 46 44 77 8 94 57 65 18 49 15 92 14 84 10 83 98 29 49 96 30 77 76 43 34 28 5 18 92 95 82 84 74 35 63 23 25 12 55 61 84 65 45 99 78 59 13 4 47 5 64 42 62 74 99 88 76 98 84 73 62 6 38 62 45 95 92 63 67 95 54 41 62 6 9 56 24 85 74 51 27 16 11 26 97 45 99 73 62 60 22 95 11 99 31 35 2 73 1 1 97 3 71 52 70 48 41 2 69 5 37 1 100 72 47 37 1 82 67 85 67 34 64 6 88 43 5 29 31 16 69 12 7 37 78 13 21 2 51 92 7 17 17 21 100 80 41 36 98 24 93 67 1 24 68 54 26 16 46 45 13 70 51 52 37 51 43 87 63 20 51 27 80 86 96 42 31 57 52 87
//87 52 57 31 42 96 86 80 27 51 20 63 87 43 51 37 52 51 70 13 45 46 16 26 54 68 24 1 67 93 24 98 36 41 80 100 21 17 17 7 92 51 2 21 13 78 37 7 12 69 16 31 29 5 43 88 6 64 34 67 85 67 82 1 37 47 72 100 1 37 5 69 2 41 48 70 52 71 3 97 1 1 73 2 35 31 99 11 95 22 60 62 73 99 45 97 26 11 16 27 51 74 85 24 56 9 6 62 41 54 95 67 63 92 95 45 62 38 6 62 73 84 98 76 88 99 74 62 42 64 5 47 4 13 59 78 99 45 65 84 61 55 12 25 23 63 35 74 84 82 95 92 18 5 28 34 43 76 77 30 96 49 29 98 83 10 84 14 92 15 49 18 65 57 94 8 77 44 46 4 84 75 2 79 26 43 21 67 49 11 8 99 67 74 82 13 50 17 85 45
//The average is: 50
//1
//100
//35
//68
//1 1 1 1 2 2 2 3 4 4 5 5 5 6 6 6 6 7 7 7 7 8 8 9 10 11 11 11 12 12 13 13 13 14 15 16 16 16 16 17 17 17 18 18 20 21 21 21 22 23 24 24 24 25 26 26 26 27 27 28 29 29 30 31 31 34 34 35 35 36 37 37 37 37 38 41 41 41 42 42 42 43 43 43 43 44 45 45 45 45 45 46 46 47 47 48 49 49 49 50 51 51 51 51 51 52 52 54 54 55 56 57 57 57 59 60 61 62 62 62 62 62 63 63 63 64 64 65 65 67 67 67 67 67 67 68 69 69 70 70 71 72 73 73 73 74 74 74 74 75 76 76 77 77 78 78 79 80 80 82 82 82 83 84 84 84 84 84 85 85 85 86 87 87 88 88 92 92 92 92 93 94 95 95 95 95 96 96 97 97 98 98 98 99 99 99 99 99 100 100
//The amount of 58s lost: 0
//The amount of evens: 93