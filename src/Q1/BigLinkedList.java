package Q1;
import DataStructures.intLinkedList;

public class BigLinkedList {
    public static void main(String[] args) {
        var list = new intLinkedList();
        for (int lcv = 0; lcv < 200; lcv++) {
            list.addFront((int) (Math.random()*100 + 1));
        }
        var iter = list.iterator();
        while (iter.hasNext()) {
            System.out.print(iter.next() + " ");
        }
        System.out.println();
        list.addLast(58);
        System.out.println(list.getCount());
        System.out.println(list.add(58, 58));
        System.out.println("Is list empty: " + list.isEmpty());
        list.printList();
        System.out.println(list.getFirst());
        System.out.println(list.getLast());
        System.out.println(list.getSpot(58));
        list.removeFirst();
        list.removeLast();
        System.out.println(list.getLast());
        System.out.println("The amount of numbers less than 10 is " + list.countLess10());
        list.printList();
        list.removeSpot(58);
        list.clear();
        System.out.println(list.checkForNum(58));
        for (int lcv = 0; lcv < 200; lcv++) {
            list.addFront((int) (Math.random()*100 + 1));
        }
        list.printList();
        list.getReverse();
        list.printList();
        System.out.print("The average is: " + Math.round(list.avg() * 100)/100);
        System.out.println();
        System.out.println(list.min());
        System.out.println(list.max());
        System.out.println(list.findSpotMaxFirst());
        System.out.println(list.findSpotMaxLast());
        list.sort();
        list.printList();
        var num = list.lose58();
        System.out.println("The amount of 58s lost: " + num);
        System.out.println("The amount of evens: " + list.getEvenCount());
        list.killOdds();
        list.printList();
    }
}
//9 71 2 15 43 25 18 62 64 19 11 91 44 14 71 5 89 70 84 24 15 87 79 71 29 94 79 40 87 34 27 62 42 99 59 84 51 93 14 62 68 34 94 83 15 94 97 77 38 41 51 34 32 56 85 26 45 68 75 56 4 38 5 36 61 64 75 12 74 20 76 54 52 13 65 87 75 33 28 86 42 79 21 72 96 75 70 14 31 76 49 11 61 88 90 60 58 80 83 83 70 61 43 2 57 34 64 48 17 22 50 48 75 40 51 70 90 93 28 27 24 20 76 92 34 46 23 68 83 92 45 39 9 80 92 56 2 94 47 61 94 97 98 93 48 60 17 45 4 66 77 4 95 21 68 66 28 79 100 71 66 83 90 45 10 57 61 78 60 22 84 39 18 59 32 99 39 77 69 86 81 81 84 66 39 46 84 71 95 78 67 100 45 3 84 88 13 25 87 88
//201
//true
//Is list empty: true
//9 71 2 15 43 25 18 62 64 19 11 91 44 14 71 5 89 70 84 24 15 87 79 71 29 94 79 40 87 34 27 62 42 99 59 84 51 93 14 62 68 34 94 83 15 94 97 77 38 41 51 34 32 56 85 26 45 58 68 75 56 4 38 5 36 61 64 75 12 74 20 76 54 52 13 65 87 75 33 28 86 42 79 21 72 96 75 70 14 31 76 49 11 61 88 90 60 58 80 83 83 70 61 43 2 57 34 64 48 17 22 50 48 75 40 51 70 90 93 28 27 24 20 76 92 34 46 23 68 83 92 45 39 9 80 92 56 2 94 47 61 94 97 98 93 48 60 17 45 4 66 77 4 95 21 68 66 28 79 100 71 66 83 90 45 10 57 61 78 60 22 84 39 18 59 32 99 39 77 69 86 81 81 84 66 39 46 84 71 95 78 67 100 45 3 84 88 13 25 87 88 58
//9
//58
//57
//88
//The amount of numbers less than 10 is 10
//71 2 15 43 25 18 62 64 19 11 91 44 14 71 5 89 70 84 24 15 87 79 71 29 94 79 40 87 34 27 62 42 99 59 84 51 93 14 62 68 34 94 83 15 94 97 77 38 41 51 34 32 56 85 26 45 58 68 75 56 4 38 5 36 61 64 75 12 74 20 76 54 52 13 65 87 75 33 28 86 42 79 21 72 96 75 70 14 31 76 49 11 61 88 90 60 58 80 83 83 70 61 43 2 57 34 64 48 17 22 50 48 75 40 51 70 90 93 28 27 24 20 76 92 34 46 23 68 83 92 45 39 9 80 92 56 2 94 47 61 94 97 98 93 48 60 17 45 4 66 77 4 95 21 68 66 28 79 100 71 66 83 90 45 10 57 61 78 60 22 84 39 18 59 32 99 39 77 69 86 81 81 84 66 39 46 84 71 95 78 67 100 45 3 84 88 13 25 87 88
//false
//85 9 37 84 79 71 83 6 34 61 81 31 18 83 79 43 13 29 37 72 64 86 20 27 15 8 91 20 2 63 56 12 67 30 14 28 92 92 10 44 46 73 89 25 57 98 94 80 5 77 30 22 78 7 68 78 58 54 47 7 78 86 22 27 23 87 71 12 73 83 84 63 35 49 36 13 46 9 89 80 48 92 72 86 63 33 73 66 23 85 81 44 31 67 47 84 44 9 79 25 73 68 88 4 20 28 35 99 72 97 56 51 74 90 31 22 8 88 3 11 1 47 39 57 79 31 53 33 76 80 82 20 100 81 52 2 26 70 9 54 4 23 37 74 97 58 35 7 97 77 51 99 88 82 97 90 39 16 21 83 33 83 29 29 52 16 65 44 41 17 85 31 83 89 97 84 37 19 23 60 59 56 60 69 64 100 58 43 32 37 73 91 28 77 39 94 84 8 9 65
//65 9 8 84 94 39 77 28 91 73 37 32 43 58 100 64 69 60 56 59 60 23 19 37 84 97 89 83 31 85 17 41 44 65 16 52 29 29 83 33 83 21 16 39 90 97 82 88 99 51 77 97 7 35 58 97 74 37 23 4 54 9 70 26 2 52 81 100 20 82 80 76 33 53 31 79 57 39 47 1 11 3 88 8 22 31 90 74 51 56 97 72 99 35 28 20 4 88 68 73 25 79 9 44 84 47 67 31 44 81 85 23 66 73 33 63 86 72 92 48 80 89 9 46 13 36 49 35 63 84 83 73 12 71 87 23 27 22 86 78 7 47 54 58 78 68 7 78 22 30 77 5 80 94 98 57 25 89 73 46 44 10 92 92 28 14 30 67 12 56 63 2 20 91 8 15 27 20 86 64 72 37 29 13 43 79 83 18 31 81 61 34 6 83 71 79 84 37 9 85
//The average is: 52
//1
//100
//14
//68
//2 2 2 3 4 4 5 6 7 7 7 8 8 8 9 9 9 9 9 10 11 12 12 13 13 14 15 16 16 17 18 19 20 20 20 20 21 22 22 22 23 23 23 23 25 25 26 27 27 28 28 28 29 29 29 30 30 31 31 31 31 31 32 33 33 33 34 35 35 35 36 37 37 37 37 37 39 39 39 41 43 43 44 44 44 44 46 46 47 47 47 48 49 51 51 52 52 53 54 54 56 56 56 57 57 58 58 58 59 60 60 61 63 63 63 64 64 65 65 66 67 67 68 68 69 70 71 71 72 72 72 73 73 73 73 73 74 74 76 77 77 77 78 78 78 79 79 79 79 80 80 80 81 81 81 82 82 83 83 83 83 83 83 84 84 84 84 84 85 85 85 86 86 86 87 88 88 88 89 89 89 90 90 91 91 92 92 92 94 94 97 97 97 97 97 98 99 99 100 100
//ley
//ley
//The amount of 58s lost: 2
//The amount of evens: 91
//2 2 2 4 4 6 8 8 8 10 12 12 14 16 16 18 20 20 20 20 22 22 22 26 28 28 28 30 30 32 34 36 44 44 44 44 46 46 48 52 52 54 54 56 56 56 58 58 60 60 64 64 66 68 68 70 72 72 72 74 74 76 78 78 78 80 80 80 82 82 84 84 84 84 84 86 86 86 88 88 88 90 90 92 92 92 94 94 98 100 100